name: Build

on:
  push:
    tags:
      - 'v*.*.*'


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup env var
        env:
          APPS_JSON: ${{ secrets.APPS_JSON }}
        run: |
          echo "CUSTOM_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BUILD_TARGET=custom" >> $GITHUB_ENV
          echo "APPS_JSON_BASE64=$(echo ${APPS_JSON} | base64 -w 0)" >> $GITHUB_ENV
          echo "::add-mask::$APPS_JSON_ENCODE64"

      - name: test env var
        run: |
          echo $CUSTOM_VERSION 
          echo $BUILD_TARGET 
          echo $APPS_JSON_BASE64

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      # - name: Get latest versions
      #   run: python3 ./.github/scripts/get_latest_tags.py --repo ${{ inputs.repo }} --version ${{ inputs.version }}
      - name: Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v2.3.0
        with:
          push: true
        env:
          REGISTRY_USER: localhost:5000/frappe

      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.10"

      # - name: Install dependencies
      #   run: |
      #     python -m venv venv
      #     venv/bin/pip install -r requirements-test.txt

      # - name: Test
      #   run: venv/bin/pytest --color=yes

      # - name: Push
      #   uses: docker/bake-action@v2.3.0
      #   with:
      #     push: true
